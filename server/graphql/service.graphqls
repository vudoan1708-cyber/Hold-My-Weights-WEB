"""An ISO-8601 encoded UTC date string."""
scalar DateTime

"""Node interface"""
interface Node {
  id: ID!
}

"""User"""
type User {
  """Google ID"""
  user_id: String!
  name: String!
  email: String!
  photo: String!
  dateOfBirth: DateTime
}

"""Equipment"""
type Equipment {
  name: String!
  description: String!
  type: String!
  photo: String!
  dateOfPublish: DateTime
  barcode: String!
}

"""Booking Times"""
type BookingTime {
  expected_time: [String!]!
  finishing_time: [String]
}

"""Booking System"""
type BookingSystem {
  booked: [Equipment!]!
  time: BookingTime!
}

"""Service"""
type Service implements Node {
  id: ID!
  user: User!
  equipment: BookingSystem!
  created_at: String!
}

"""Queries available through this API"""
type Query {
  node(
    """The ID of the object"""
    id: ID!
  ): Node
  """Get All The Services You Have Booked Historically"""
  getServices: [Service!]!
  """Get A Particular Service"""
  getService(id: ID!): Service!
}

"""Input Payload for Creating a User Object"""
input UserInput {
  """Google ID"""
  user_id: String!
  name: String!
  email: String!
  photo: String!
  dateOfBirth: DateTime
}

"""Input Payload for Creating a Equipment Object"""
input EquipmentInput {
  name: String!
  description: String!
  type: String!
  photo: String!
  dateOfPublish: DateTime
  barcode: String!
}

"""Input Payload for Booking Times"""
input BookingTimeInput {
  expected_time: [String!]!
  finishing_time: [String]
}

"""Input Payload for Creating a Booking System Object"""
input BookingSystemInput {
  booked: [EquipmentInput!]!
  time: BookingTimeInput!
}



"""Input payload for Creating a Service"""
input CreateServiceInput {
  user: UserInput!
  equipment: BookingSystemInput!
}

"""Input payload for Deleting a Service"""
input DeleteServiceInput {
  id: ID!
}

"""Mutations avialable through this API"""
type Mutation {
  """Service"""
  createService(input: CreateServiceInput!): Service!
  deleteService(input: DeleteServiceInput!): Service!
  """Edit Service Info"""
  editUserName(id: ID!, value: String!): Service!
  editUserEmail(id: ID!, value: String!): Service!
  editUserPhoto(id: ID!, value: String!): Service!
  editUserDateOfBirth(id: ID!, value: DateTime!): Service!

  editUserDetail(id: ID!, input: UserInput!): Service!

  editEquipment(id: ID!, input: BookingSystemInput!): Service!

  editMultipleFields(id: ID!, options: [String!]!, input: CreateServiceInput!): Service!
}

"""Subscriptions avialable through this API"""
type Subscription {
  updateServiceAdded: Service!
}
